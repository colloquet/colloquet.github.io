// SETTINGS
$phablet: 480px !default;
$tablet: 768px !default;
$desktop: 960px !default;

$base-font-size: 14px !default;

// BASIC MIXINS
@mixin animation($para) {
	-webkit-animation: $para;
	animation: $para;
}

@mixin breakpoint($device) {
	@if $device == phablet {
		@media (min-width: #{$phablet}) { @content; }
	}
	@else if $device == tablet {
		@media (min-width: #{$tablet}) { @content; }
	}
	@else if $device == desktop {
		@media (min-width: #{$desktop}) { @content; }
	}
}

@mixin column($column-count, $gap, $column-width: 'auto') {
	-webkit-columns: $column-width $column-count;
	-moz-columns: $column-width $column-count;
	columns: $column-width $column-count;
	-webkit-column-gap: $gap;
	-moz-column-gap: $gap;
	column-gap: $gap;
}

@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	@keyframes #{$name} {
		@content;
	}
}

@mixin multiplestates() {
	&:hover, &:focus, &:active {
		@content;
	}
}

@mixin placeholder() {
	::-webkit-input-placeholder {
		@content;
	}
	:-moz-placeholder {
		@content;
	}
	::-moz-placeholder {
		@content;
	}
	:-ms-input-placeholder {
		@content;
	}
}

@function remify($values) {
	$rem: ();

	@each $value in $values {
		@if $value == 0 or $value == auto {
			$rem: append($rem, $value);
		} @else {
			$rem: append($rem, ($value / $base-font-size * 1rem));
		}
	}

	@return $rem;
}

@mixin round($size) {
	width: $size;
	height: $size;
	border-radius: 50%;
}

@mixin transform($action) {
	-webkit-transform: $action; // for Safari8.1
	-ms-transform: $action; // for IE9
	transform: $action;
}

@mixin transition($properties...) {
  // Fix for vendor-prefix transform property
  $needs-prefixes: false;
  $webkit: ();
  $spec: ();

  // Create lists for vendor-prefixed transform
  @each $list in $properties {
    @if nth($list, 1) == "transform" {
      $needs-prefixes: true;
      $list1: -webkit-transform;
      $list2: ();

      @each $var in $list {
        $list2: join($list2, $var);

        @if $var != "transform" {
          $list1: join($list1, $var);
        }
      }

      $webkit: append($webkit, $list1);
        $spec: append($spec,   $list2);
    }
  }

  @if $needs-prefixes {
	transition: $webkit;
    transition: $spec;
  }
  @else {
    @if length($properties) >= 1 {
      transition: $properties;
    }

    @else {
      $properties: all 450ms cubic-bezier(0.23, 1, 0.32, 1);
      transition: $properties;
    }
  }
}
